{"componentChunkName":"component---src-templates-markdown-remark-js","path":"/data-science/ds-workflows/docs/develop_collaborate/create_and_deploy_jh_image.md","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"aa7925d2-e280-5f2c-a40a-b3d83cfe7843","html":"<h1 id=\"how-to-create-a-jupyterhub-image-and-deploy-it-on-odh\" style=\"position:relative;\"><a href=\"#how-to-create-a-jupyterhub-image-and-deploy-it-on-odh\" aria-label=\"how to create a jupyterhub image and deploy it on odh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to create a JupyterHub image and deploy it on ODH</h1>\n<p>This how-to is about getting your repository built into an image and having that image made available in (your) JupyterHub instance.</p>\n<p>We are going to deal with 2 issues:</p>\n<ol class=\"pf-c-list\">\n<li>Build an image and add to a public image repository.</li>\n<li>Add your image to an ODH instance (that has a JupyterHub in it).</li>\n</ol>\n<p>If you want to see a video walkthrough of this guide with an example project, please check out the video below:</p>\n<p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.39999999999999%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <div class=\"embedVideo-container\"> <iframe title=\"\" src=\"https://www.youtube-nocookie.com/embed/R61i15hb4B0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" allowfullscreen=\"\"></iframe> </div> </div></p>\n<p>If you don’t have an ODH instance that you would like to work with, you can create one using these guides:</p>\n<p><a href=\"https://github.com/operate-first/continuous-deployment/tree/master/docs\">https://github.com/operate-first/continuous-deployment/tree/master/docs</a></p>\n<h2 id=\"build-an-image\" style=\"position:relative;\"><a href=\"#build-an-image\" aria-label=\"build an image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build an image</h2>\n<p>If your image is not yet built, you can use <a href=\"https://thoth-station.ninja/\">Thoth</a> to do it for you using a config file in your repo.</p>\n<p>Here’s an example that goes together with the above example of an ImageStream:</p>\n<p><a href=\"https://github.com/aicoe-aiops/categorical-encoding/blob/master/.aicoe-ci.yaml\">https://github.com/aicoe-aiops/categorical-encoding/blob/master/.aicoe-ci.yaml</a></p>\n<p>I am going to compile this into a guide and would be grateful for your testing of the process or improvement suggestions.</p>\n<p>Information on enabling Thoth on your repo is here: <a href=\"https://github.com/AICoE/aicoe-ci#setting-aicoe-ci-on-github-organizationrepository\">https://github.com/AICoE/aicoe-ci#setting-aicoe-ci-on-github-organizationrepository</a></p>\n<p>For 3rd party projects outside of the AICoE, one should change the value of <code class=\"language-text\">registry-org</code> (quay.io org) to his own value.</p>\n<h3 id=\"steps-to-have-your-notebook-repo-build-into-an-image-by-thoth\" style=\"position:relative;\"><a href=\"#steps-to-have-your-notebook-repo-build-into-an-image-by-thoth\" aria-label=\"steps to have your notebook repo build into an image by thoth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps to have your notebook repo build into an image by Thoth</h3>\n<h3 id=\"enable-the-ci-integration\" style=\"position:relative;\"><a href=\"#enable-the-ci-integration\" aria-label=\"enable the ci integration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enable the CI integration</h3>\n<p>To get image built by Thoth (in Tekton?) (not sure what is the right formulation here) and uploaded to quay.io (image registry) one needs to add the “aicoe-ci” app to the project:</p>\n<p><img src=\"/public/assets/jh_image_howto/ci-integration.png\" alt=\"Setting up CI integration with Thoth\"></p>\n<p>If your project is under the <code class=\"language-text\">aicoe-aiops</code> (and some other) GH orgs then this is already done on the org level and you don’t need to do this step.</p>\n<h3 id=\"setting-up-the-image-repository\" style=\"position:relative;\"><a href=\"#setting-up-the-image-repository\" aria-label=\"setting up the image repository permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up the image repository</h3>\n<p>Next you need to have a place to upload the built images. For that you need an account and a project on quay.io.</p>\n<p>Again there already exists an ‘AICoE’ organization in Quay: <a href=\"https://quay.io/organization/aicoe\">https://quay.io/organization/aicoe</a> so if your project is part of AICoE you can use that.</p>\n<p>Thoth needs to be able to access your project — push images into it. That can be accomplished by creating a robot account with a push (pull) secret.</p>\n<p>There are pre-configured push secrets for various projects already present in Thoth. See the bottom of this page: <a href=\"https://github.com/AICoE/aicoe-ci#services-and-features\">https://github.com/AICoE/aicoe-ci#services-and-features</a>.</p>\n<p>If your project is in one of these, you can skip this step.</p>\n<p><img src=\"/public/assets/jh_image_howto/quay-robot.png\" alt=\"Quay pull secret setup\"></p>\n<p>After creating the robot you need to set the permissions it will possess.</p>\n<p><img src=\"/public/assets/jh_image_howto/quay-secret.png\" alt=\"Quay: setup permissions\"></p>\n<p>And finally, you need to copy the secret and give it to Thoth. Copy the secret here:</p>\n<p><img src=\"/public/assets/jh_image_howto/quay-secret-cred.png\" alt=\"quay-robot-2\"></p>\n<p>This is currently a manual process so just, please, send the secret (the whole yaml) to @harshad16 to have it added.</p>\n<p>Remember, this is only if you actually need new push secret. That is if Thoth does not have it already preconfigured.</p>\n<h3 id=\"adding-configuration-file-to-your-repo\" style=\"position:relative;\"><a href=\"#adding-configuration-file-to-your-repo\" aria-label=\"adding configuration file to your repo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding configuration file to your repo</h3>\n<p>Next we need to finish configuration of the source repo. This is done by adding a config file named <code class=\"language-text\">.aicoe-ci.yaml</code>.</p>\n<p>Here’s an example of a working minimal config: <a href=\"https://github.com/aicoe-aiops/project-template/blob/master/.aicoe-ci.yaml\">https://github.com/aicoe-aiops/project-template/blob/master/.aicoe-ci.yaml</a></p>\n<p>Uncomment the <code class=\"language-text\">build</code> section to enable Thoth build.</p>\n<p>The builder can do a number of things. To have the S2I correctly build these 2 lines are essential:</p>\n<p>The important parts for building the image using S2I into a format expected by JH is:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  build-source-script: &quot;image:///opt/app-root/builder&quot;\n  base-image: quay.io/thoth-station/s2i-custom-notebook:latest</code></pre></div>\n<p>Modify the lines in the <code class=\"language-text\">build</code> section:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  registry-org: aicoe\n  registry-project: my_project\n  registry-secret: aicoe-pusher-secret</code></pre></div>\n<p>to match the project and robot’s push secret you have setup in Quay.</p>\n<h3 id=\"triggering-the-build\" style=\"position:relative;\"><a href=\"#triggering-the-build\" aria-label=\"triggering the build permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Triggering the build</h3>\n<p>Once you have this in your repo. You can trigger the build by doing a release. This is something that will be done for you automatically if you are using the whole Thoth toolset. But for minimal working setup, you can create a release manually.</p>\n<p><img src=\"/public/assets/jh_image_howto/gh-tag.png\" alt=\"Trigger a build in GH\"></p>\n<p><img src=\"/public/assets/jh_image_howto/gh-release.png\" alt=\"Do a release in GH\"></p>\n<p>If you have done these steps correctly, Thoth will pick up your tag and run a image build for you.</p>\n<h2 id=\"checking-and-debugging-the-build\" style=\"position:relative;\"><a href=\"#checking-and-debugging-the-build\" aria-label=\"checking and debugging the build permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Checking and debugging the build</h2>\n<p>You can login to <a href=\"https://tekton.operate-first.cloud/#/namespaces/opf-ci-pipelines/pipelineruns\">https://tekton.operate-first.cloud/#/namespaces/opf-ci-pipelines/pipelineruns</a> and find your build by using the search field. Enter “project:&#x3C;YOUR<em>REPO</em>NAME>“.</p>\n<p><img src=\"/public/assets/jh_image_howto/thoth-pipeline-run.png\" alt=\"Tekton: search a build\"></p>\n<p>The part that is relevant for image building is under “tag-release-run”. There may by other sections that are red, but if this part is green the image was built and pushed. You can also check that on Quay.io.</p>\n<h1 id=\"adding-the-image-where-you-need-it\" style=\"position:relative;\"><a href=\"#adding-the-image-where-you-need-it\" aria-label=\"adding the image where you need it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding the image where you need it</h1>\n<p>Once your image is built (check in Quay), you can use it in your instance of ODH.</p>\n<h2 id=\"creating-an-imagestream\" style=\"position:relative;\"><a href=\"#creating-an-imagestream\" aria-label=\"creating an imagestream permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating an ImageStream</h2>\n<p>This is done using a manifest of type <code class=\"language-text\">ImageStream</code>.</p>\n<p>Here is an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> image.openshift.io/v1\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ImageStream\n  <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> categorical<span class=\"token punctuation\">-</span>encoding<span class=\"token punctuation\">-</span>notebook\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">opendatahub.io/notebook-image</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n    <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">opendatahub.io/notebook-image-url</span><span class=\"token punctuation\">:</span>\n        <span class=\"token string\">\"https://github.com/aicoe-aiops/categorical-encoding\"</span>\n      <span class=\"token key atrule\">opendatahub.io/notebook-image-name</span><span class=\"token punctuation\">:</span>\n        <span class=\"token string\">\"Categorical Encoding Notebook Image\"</span>\n      <span class=\"token key atrule\">opendatahub.io/notebook-image-desc</span><span class=\"token punctuation\">:</span>\n        <span class=\"token string\">\"Jupyter notebook image with categorical encoding examples\"</span>\n  <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">lookupPolicy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">local</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">openshift.io/imported-from</span><span class=\"token punctuation\">:</span> quay.io/aicoe/categorical<span class=\"token punctuation\">-</span>encoding\n        <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> DockerImage\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> quay.io/aicoe/categorical<span class=\"token punctuation\">-</span>encoding<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">importPolicy</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">scheduled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"latest\"</span></code></pre></div>\n<p>The important part is:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  labels:\n    opendatahub.io/notebook-image: &quot;true&quot;</code></pre></div>\n<p>This tells JupyterHub that it has to offer this particular image then creating an instance for it’s users.</p>\n<p>Depending on where you want to use your image, you have to place the manifest into the right place or load in into your project using <code class=\"language-text\">oc apply -f &lt;image_file.yaml&gt;</code>.</p>\n<p>For example</p>\n<ul class=\"pf-c-list\">\n<li>\n<p>If you want to add your image to Operate First, you need to add the <code class=\"language-text\">ImageStream</code> manifest to the correct path in this <a href=\"https://github.com/operate-first/apps\">repo</a>:</p>\n<ul class=\"pf-c-list\">\n<li>in <a href=\"https://github.com/operate-first/apps/tree/master/kfdefs/base/jupyterhub/notebook-images\">kfdefs/base/jupyterhub/notebook-images</a> where <code class=\"language-text\">base</code> in the overlays concept means that this image will be applied to all instances/overlays that have JupyterHub. In this case you can open a similar <a href=\"https://github.com/operate-first/apps/pull/411/files\">Pull Request</a>.</li>\n<li>in <a href=\"https://github.com/operate-first/apps/tree/master/kfdefs/overlays\">kfdefs/overlays</a> you will find all instances maintained by ArgoCD and you can choose to add the image only to a specific instance/overlay and not to all. In this case you can open a similar <a href=\"https://github.com/operate-first/apps/pull/1148/files\">Pull Request</a> (e.g. if you need to add an image to <code class=\"language-text\">osc</code> overlay). NOTE: <em><code class=\"language-text\">overlay</code> concept is used also to override manifests from <code class=\"language-text\">base</code>, for example if you want a different image version in a specific <code class=\"language-text\">overlay</code>.</em></li>\n</ul>\n</li>\n<li>If you need to add your image to the internal DH (ODH instance run by DH team), make a PR against the <code class=\"language-text\">production</code> branch here:\n<a href=\"https://github.com/AICoE/idh-manifests/blob/production/jupyterhub/bases/custom-images/jupyterhub-custom-images.yaml\">https://github.com/AICoE/idh-manifests/blob/production/jupyterhub/bases/custom-images/jupyterhub-custom-images.yaml</a></li>\n</ul>","fields":{"srcLink":"https://github.com/aicoe-aiops/data-science-workflows/blob/master/docs/develop_collaborate/create_and_deploy_jh_image.md"},"frontmatter":{"title":"","description":null,"extraClasses":null,"banner":null}}},"pageContext":{"id":"aa7925d2-e280-5f2c-a40a-b3d83cfe7843"}},"staticQueryHashes":["1764348645","2823140819","3000541721","3606484676"]}