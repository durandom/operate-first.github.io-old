{"componentChunkName":"component---src-templates-markdown-remark-js","path":"/data-science/ai4ci/notebooks/time-to-merge-prediction","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"ac0a5862-6c85-52dd-9964-35fdd002ff18","html":"<h1 id=\"time-to-merge-prediction\" style=\"position:relative;\"><a href=\"#time-to-merge-prediction\" aria-label=\"time to merge prediction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Time to Merge Prediction</h1>\n<p>The aim of this ML Problem is to take a Github repository of interest and predict the time that it will take to merge a new Pull Request. For that purpose, we frame the “time taken to merge a PR” as a classification problem where we predict whether the time taken to merge a PR falls within one of a few predefined time ranges.</p>\n<h2 id=\"github-dataset\" style=\"position:relative;\"><a href=\"#github-dataset\" aria-label=\"github dataset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github Dataset</h2>\n<p>In order to collect the data from Github repositories, we use the thoth-station <a href=\"https://github.com/thoth-station/mi-scheduler\">MI- Scheduler</a> that collects and analyzes metadata information from Github repositories and stores them on ceph object storage. We use the MI-Scheduler tool to collect Pull Request data from the <a href=\"https://github.com/openshift/origin\">OpenShift origin</a> repository.</p>\n<h2 id=\"feature-engineering\" style=\"position:relative;\"><a href=\"#feature-engineering\" aria-label=\"feature engineering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feature Engineering</h2>\n<p>After collecting the data, we perform some initial exploration such as correlation analysis on the dataset to discover any interesting insights. We then engineer features which are needed to train a classification model which predicts the time to merge of a PR.</p>\n<p>We transform the input columns obtained from pull requests such as size of a PR, types of files added in a PR, description of a PR into various features which can be ingested by an ML Model.</p>\n<ul class=\"pf-c-list\">\n<li><a href=\"../data-sources/oc-github-repo/github_PR_EDA.ipynb\">Feature Engineering Notebook</a></li>\n</ul>\n<h2 id=\"model-training\" style=\"position:relative;\"><a href=\"#model-training\" aria-label=\"model training permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Training</h2>\n<p>After performing initial data analysis and feature engineering, we train a machine learning model to classify the time<em>to</em>merge values for PRs into one of 10 bins (or “classes”).</p>\n<p>To train this model, we use the features engineered from the raw PR data. We explored various vanilla classifiers, like Naive Bayes, SVM, Random Forests, and XGBoost.</p>\n<ul class=\"pf-c-list\">\n<li><a href=\"time_to_merge_model.ipynb\">Model Training Notebook</a></li>\n</ul>\n<h2 id=\"model-deployment\" style=\"position:relative;\"><a href=\"#model-deployment\" aria-label=\"model deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Deployment</h2>\n<p>To make the machine learning model available at an interactive endpoint,  we serve the model yielding the best results into a Seldon service. We create an sklearn pipeline consisting of 2 steps, scaling of the input features and the classifier itself.</p>\n<ul class=\"pf-c-list\">\n<li>Saved sklearn model pipeline on <code class=\"language-text\">opf-datacatalog</code> bucket: <code class=\"language-text\">github/ttm-model/pipeline/model.joblib</code></li>\n<li>Interactive model endpoint: <a href=\"http://github-pr-ttm-ds-ml-workflows-ws.apps.smaug.na.operate-first.cloud/predict\">http://github-pr-ttm-ds-ml-workflows-ws.apps.smaug.na.operate-first.cloud/predict</a></li>\n<li><a href=\"model_inference.ipynb\">Model Inference Notebook</a></li>\n</ul>\n<p>This service once integrated with a Github repo, can provide newly submitted PRs with a time to merge estimate.</p>","fields":{"srcLink":"https://github.com/aicoe-aiops/ocp-ci-analysis/blob/master/notebooks/time-to-merge-prediction/README.md"},"frontmatter":{"title":"","description":null,"extraClasses":null,"banner":null}}},"pageContext":{"id":"ac0a5862-6c85-52dd-9964-35fdd002ff18"}},"staticQueryHashes":["1764348645","2823140819","3000541721","3606484676"]}