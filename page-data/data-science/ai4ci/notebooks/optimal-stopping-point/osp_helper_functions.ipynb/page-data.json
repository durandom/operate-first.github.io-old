{"componentChunkName":"component---src-templates-jupyter-notebook-js","path":"/data-science/ai4ci/notebooks/optimal-stopping-point/osp_helper_functions.ipynb","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"jupyterNotebook":{"id":"d4524471-df77-5055-959b-641406ebf49c >>> JupyterNotebook","html":"<div class=\"notebook-render\"><div class=\"sc-ifAKCX zMCZx\"><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-iwsKbI exQuEV markdown\"><h1>Optimal Stopping Point - Helper Functions</h1>\n<p>This notebook contains some helper functions that are needed for the calculation of Optimal Stopping Point.</p></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[1]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#008000;font-style:italic\">## Import libraries</span>\n<span class=\"token\" style=\"color:#0000ff\">from</span> enum <span class=\"token\" style=\"color:#0000ff\">import</span> Enum\n<span class=\"token\" style=\"color:#0000ff\">import</span> pandas <span class=\"token\" style=\"color:#0000ff\">as</span> pd\n<span class=\"token\" style=\"color:#0000ff\">import</span> numpy <span class=\"token\" style=\"color:#0000ff\">as</span> np\n<span class=\"token\" style=\"color:#0000ff\">import</span> datetime\n<span class=\"token\" style=\"color:#0000ff\">from</span> io <span class=\"token\" style=\"color:#0000ff\">import</span> BytesIO\n<span class=\"token\" style=\"color:#0000ff\">from</span> pathlib <span class=\"token\" style=\"color:#0000ff\">import</span> Path\n<span class=\"token\" style=\"color:#0000ff\">import</span> warnings\n<span class=\"token\" style=\"color:#0000ff\">import</span> itertools\n\n\n<span class=\"token\" style=\"color:#0000ff\">from</span> intersect <span class=\"token\" style=\"color:#0000ff\">import</span> intersection\n<span class=\"token\" style=\"color:#0000ff\">from</span> sklearn<span class=\"token\" style=\"color:#393A34\">.</span>preprocessing <span class=\"token\" style=\"color:#0000ff\">import</span> StandardScaler\n<span class=\"token\" style=\"color:#0000ff\">import</span> scipy<span class=\"token\" style=\"color:#393A34\">.</span>stats\n\n<span class=\"token\" style=\"color:#0000ff\">from</span> dotenv <span class=\"token\" style=\"color:#0000ff\">import</span> load_dotenv<span class=\"token\" style=\"color:#393A34\">,</span> find_dotenv\n<span class=\"token\" style=\"color:#0000ff\">import</span> boto3\n\nload_dotenv<span class=\"token\" style=\"color:#393A34\">(</span>find_dotenv<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\nwarnings<span class=\"token\" style=\"color:#393A34\">.</span>filterwarnings<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;ignore&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-iwsKbI exQuEV markdown\"><h2>Metric Template Functions</h2>\n<p>These are functions copied from <code>../data_sources/TestGrid/metrics_template.ipynb</code> as a workaround to <a href=\"https://github.com/elyra-ai/elyra/issues/1734\">this issue</a> where functions imported from notebooks must be in the same directory.</p></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[2]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">class</span> <span class=\"token\" style=\"color:#2B91AF\">CephCommunication</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Class to establish communication with a ceph s3 bucket.\n    It connects with the bucket and provides methods to read and write data in the parquet format.\n    &quot;&quot;&quot;</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">__init__</span><span class=\"token\" style=\"color:#393A34\">(</span>\n        self<span class=\"token\" style=\"color:#393A34\">,</span> s3_endpoint_url<span class=\"token\" style=\"color:#393A34\">,</span> aws_access_key_id<span class=\"token\" style=\"color:#393A34\">,</span> aws_secret_access_key<span class=\"token\" style=\"color:#393A34\">,</span> s3_bucket\n    <span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        self<span class=\"token\" style=\"color:#393A34\">.</span>s3_endpoint_url <span class=\"token\" style=\"color:#393A34\">=</span> s3_endpoint_url\n        self<span class=\"token\" style=\"color:#393A34\">.</span>aws_access_key_id <span class=\"token\" style=\"color:#393A34\">=</span> aws_access_key_id\n        self<span class=\"token\" style=\"color:#393A34\">.</span>aws_secret_access_key <span class=\"token\" style=\"color:#393A34\">=</span> aws_secret_access_key\n        self<span class=\"token\" style=\"color:#393A34\">.</span>s3_resource <span class=\"token\" style=\"color:#393A34\">=</span> boto3<span class=\"token\" style=\"color:#393A34\">.</span>resource<span class=\"token\" style=\"color:#393A34\">(</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;s3&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            endpoint_url<span class=\"token\" style=\"color:#393A34\">=</span>self<span class=\"token\" style=\"color:#393A34\">.</span>s3_endpoint_url<span class=\"token\" style=\"color:#393A34\">,</span>\n            aws_access_key_id<span class=\"token\" style=\"color:#393A34\">=</span>self<span class=\"token\" style=\"color:#393A34\">.</span>aws_access_key_id<span class=\"token\" style=\"color:#393A34\">,</span>\n            aws_secret_access_key<span class=\"token\" style=\"color:#393A34\">=</span>self<span class=\"token\" style=\"color:#393A34\">.</span>aws_secret_access_key<span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#393A34\">)</span>\n        self<span class=\"token\" style=\"color:#393A34\">.</span>bucket <span class=\"token\" style=\"color:#393A34\">=</span> s3_bucket\n        <span class=\"token\" style=\"color:#008000;font-style:italic\">## Todo: Add try catch</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">upload_to_ceph</span><span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">,</span> dataframe<span class=\"token\" style=\"color:#393A34\">,</span> s3_path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n        This helper function takes as input the data frame to be uploaded, and the output filename.\n        It then saves the data frame in the defined ceph bucket.\n        &quot;&quot;&quot;</span>\n        parquet_buffer <span class=\"token\" style=\"color:#393A34\">=</span> BytesIO<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        dataframe<span class=\"token\" style=\"color:#393A34\">.</span>to_parquet<span class=\"token\" style=\"color:#393A34\">(</span>parquet_buffer<span class=\"token\" style=\"color:#393A34\">)</span>\n        s3_obj <span class=\"token\" style=\"color:#393A34\">=</span> self<span class=\"token\" style=\"color:#393A34\">.</span>s3_resource<span class=\"token\" style=\"color:#393A34\">.</span>Object<span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">.</span>bucket<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>s3_path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n        status <span class=\"token\" style=\"color:#393A34\">=</span> s3_obj<span class=\"token\" style=\"color:#393A34\">.</span>put<span class=\"token\" style=\"color:#393A34\">(</span>Body<span class=\"token\" style=\"color:#393A34\">=</span>parquet_buffer<span class=\"token\" style=\"color:#393A34\">.</span>getvalue<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> status\n\n    <span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">read_from_ceph</span><span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">,</span> s3_path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n        Helper function to read from ceph and see if the saved data is correct.\n        &quot;&quot;&quot;</span>\n        <span class=\"token builtin\">buffer</span> <span class=\"token\" style=\"color:#393A34\">=</span> BytesIO<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        s3_object <span class=\"token\" style=\"color:#393A34\">=</span> self<span class=\"token\" style=\"color:#393A34\">.</span>s3_resource<span class=\"token\" style=\"color:#393A34\">.</span>Object<span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">.</span>bucket<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>s3_path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n        s3_object<span class=\"token\" style=\"color:#393A34\">.</span>download_fileobj<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">buffer</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        df_temp <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>read_parquet<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">buffer</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> df_temp</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[3]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">save_to_disk</span><span class=\"token\" style=\"color:#393A34\">(</span>dataframe<span class=\"token\" style=\"color:#393A34\">,</span> path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Helper function to save the dataframe\n    as a parquet file to disk.\n    &quot;&quot;&quot;</span>\n    dataset_base_path <span class=\"token\" style=\"color:#393A34\">=</span> Path<span class=\"token\" style=\"color:#393A34\">(</span>path<span class=\"token\" style=\"color:#393A34\">)</span>\n    dataset_base_path<span class=\"token\" style=\"color:#393A34\">.</span>mkdir<span class=\"token\" style=\"color:#393A34\">(</span>parents<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">,</span> exist_ok<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    dataframe<span class=\"token\" style=\"color:#393A34\">.</span>to_parquet<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> <span class=\"token\" style=\"color:#36acaa\">True</span>\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">read_from_disk</span><span class=\"token\" style=\"color:#393A34\">(</span>path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Helper function to read from disk and see if the saved data is the same.\n    &quot;&quot;&quot;</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>read_parquet<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[4]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#008000;font-style:italic\">## Helper classes and functions</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">## In your metric notebook, you could just</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">## load the template notebook functions</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">## If your metric requires specific helper</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">## functions, write them here, otherwise if these</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">## functions are general, update the template.</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">## Author: AIOps</span>\n\n\n<span class=\"token\" style=\"color:#0000ff\">class</span> <span class=\"token\" style=\"color:#2B91AF\">TestStatus</span><span class=\"token\" style=\"color:#393A34\">(</span>Enum<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Enum to encode what test status each value in testgrid corresponds to\n\n    Basically python equivalent of the enum here:\n    https://github.com/GoogleCloudPlatform/testgrid/blob/a18fe953cf98174c215c43e0258b0515e37c283b/pb/test_status/test_status.proto#L3\n    &quot;&quot;&quot;</span>\n\n    NO_RESULT <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n    PASS <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\n    PASS_WITH_ERRORS <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">2</span>\n    PASS_WITH_SKIPS <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">3</span>\n    RUNNING <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">4</span>\n    CATEGORIZED_ABORT <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">5</span>\n    UNKNOWN <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">6</span>\n    CANCEL <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">7</span>\n    BLOCKED <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">8</span>\n    TIMED_OUT <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">9</span>\n    CATEGORIZED_FAIL <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">10</span>\n    BUILD_FAIL <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">11</span>\n    FAIL <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">12</span>\n    FLAKY <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">13</span>\n    TOOL_FAIL <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">14</span>\n    BUILD_PASSED <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">15</span>\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">decode_run_length</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Decodes the run length encoded data into an unrolled form.\n    Returns a list of values.\n\n    E.g. takes in [{&quot;value&quot;:12, &quot;count&quot;:3}, {&quot;value&quot;:1, &quot;count&quot;:2}]\n    and gives [12, 12, 12, 1, 1]\n    &quot;&quot;&quot;</span>\n    lst <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> run_length <span class=\"token\" style=\"color:#0000ff\">in</span> x<span class=\"token\" style=\"color:#393A34\">:</span>\n        extension <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>run_length<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;value&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">*</span> run_length<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;count&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n        lst<span class=\"token\" style=\"color:#393A34\">.</span>extend<span class=\"token\" style=\"color:#393A34\">(</span>extension<span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> lst\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">testgrid_labelwise_encoding</span><span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> label<span class=\"token\" style=\"color:#393A34\">,</span> overall_only<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Run length encode the dataset and unroll the dataset into a list.\n    Return flattened list after encoding specified value as\n    True and rest as False\n    &quot;&quot;&quot;</span>\n\n    percent_label_by_grid_csv <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">for</span> tab <span class=\"token\" style=\"color:#0000ff\">in</span> data<span class=\"token\" style=\"color:#393A34\">.</span>keys<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n\n        <span class=\"token\" style=\"color:#0000ff\">for</span> grid <span class=\"token\" style=\"color:#0000ff\">in</span> data<span class=\"token\" style=\"color:#393A34\">[</span>tab<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>keys<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            current_grid <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>tab<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>grid<span class=\"token\" style=\"color:#393A34\">]</span>\n\n            <span class=\"token\" style=\"color:#0000ff\">if</span> <span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                <span class=\"token\" style=\"color:#0000ff\">pass</span>\n            <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># get all timestamps for this grid (x-axis of grid)</span>\n                timestamps <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n                    datetime<span class=\"token\" style=\"color:#393A34\">.</span>datetime<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                    <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;timestamps&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n                <span class=\"token\" style=\"color:#393A34\">]</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># get all test names for this grid (y-axis of grid)</span>\n                tests <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n                    current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;name&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n                    <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                <span class=\"token\" style=\"color:#393A34\">]</span>\n\n                graphs <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n                    current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;graphs&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n                    <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                <span class=\"token\" style=\"color:#393A34\">]</span>\n\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># unroll the run-length encoding and set bool for flake or not (x==13)</span>\n                decoded <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n                    <span class=\"token\" style=\"color:#393A34\">(</span>\n                        np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>decode_run_length<span class=\"token\" style=\"color:#393A34\">(</span>current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;statuses&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                        <span class=\"token\" style=\"color:#393A34\">==</span> label\n                    <span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span>tolist<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                    <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>current_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                <span class=\"token\" style=\"color:#393A34\">]</span>\n\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># add the timestamp to bool value</span>\n                decoded <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">zip</span><span class=\"token\" style=\"color:#393A34\">(</span>timestamps<span class=\"token\" style=\"color:#393A34\">,</span> g<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">for</span> g <span class=\"token\" style=\"color:#0000ff\">in</span> decoded<span class=\"token\" style=\"color:#393A34\">]</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># add the test, tab and grid name to each entry</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># TODO: any ideas for avoiding this quad-loop</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># if the label is passed as an arg, add the timestamp, tab,</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># grid, tests, graphs metric and the bool values</span>\n                <span class=\"token\" style=\"color:#0000ff\">if</span> label<span class=\"token\" style=\"color:#393A34\">:</span>\n                    <span class=\"token\" style=\"color:#0000ff\">for</span> i<span class=\"token\" style=\"color:#393A34\">,</span> d <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>decoded<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                        <span class=\"token\" style=\"color:#0000ff\">for</span> j<span class=\"token\" style=\"color:#393A34\">,</span> k <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>d<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># here we are fetching the test duration values for the tests</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># however,since not all tests contain time duration values,</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># we are only considering the &#x27;Overall&#x27; test and fetching the</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># time duration values for this test and setting it to &#x27;None&#x27;</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># for all the other tests in each grid</span>\n                            <span class=\"token\" style=\"color:#0000ff\">if</span> overall_only<span class=\"token\" style=\"color:#393A34\">:</span>\n                                <span class=\"token\" style=\"color:#0000ff\">if</span> <span class=\"token\" style=\"color:#A31515\">&quot;Overall&quot;</span> <span class=\"token\" style=\"color:#0000ff\">in</span> tests<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">try</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;values&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">except</span> IndexError<span class=\"token\" style=\"color:#393A34\">:</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n                                <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                    test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n                            <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                <span class=\"token\" style=\"color:#0000ff\">try</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                    graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>keys<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">try</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                        graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;values&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;values&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">except</span> IndexError<span class=\"token\" style=\"color:#393A34\">:</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n                                <span class=\"token\" style=\"color:#0000ff\">except</span> TypeError<span class=\"token\" style=\"color:#393A34\">:</span>\n                                    test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n\n                            decoded<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">(</span>\n                                k<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                                tab<span class=\"token\" style=\"color:#393A34\">,</span>\n                                grid<span class=\"token\" style=\"color:#393A34\">,</span>\n                                tests<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                                test_duration<span class=\"token\" style=\"color:#393A34\">,</span>\n                                k<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                            <span class=\"token\" style=\"color:#393A34\">)</span>\n                    <span class=\"token\" style=\"color:#008000;font-style:italic\"># accumulate the results</span>\n                    percent_label_by_grid_csv<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span>decoded<span class=\"token\" style=\"color:#393A34\">)</span>\n\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># if label is &#x27;None&#x27;, add only the timestamp, tab, grid, tests and test</span>\n                <span class=\"token\" style=\"color:#008000;font-style:italic\"># duration values</span>\n                <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                    <span class=\"token\" style=\"color:#0000ff\">for</span> i<span class=\"token\" style=\"color:#393A34\">,</span> d <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>decoded<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                        <span class=\"token\" style=\"color:#0000ff\">for</span> j<span class=\"token\" style=\"color:#393A34\">,</span> k <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>d<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># here we are fetching the time duration values for the tests</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># however,since not all tests contain time duration values,</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># we are only considering the &#x27;Overall&#x27; test and fetching the time duration</span>\n                            <span class=\"token\" style=\"color:#008000;font-style:italic\"># values for this test in each grid</span>\n                            <span class=\"token\" style=\"color:#0000ff\">if</span> overall_only<span class=\"token\" style=\"color:#393A34\">:</span>\n                                <span class=\"token\" style=\"color:#0000ff\">if</span> <span class=\"token\" style=\"color:#A31515\">&quot;Overall&quot;</span> <span class=\"token\" style=\"color:#0000ff\">in</span> tests<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">try</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;values&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">except</span> IndexError<span class=\"token\" style=\"color:#393A34\">:</span>\n                                        <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span>\n                                            &quot;Test duration value does <span class=\"token\" style=\"color:#0000ff\">not</span> exist <span class=\"token\" style=\"color:#0000ff\">for</span> <span class=\"token builtin\">all</span> \\\n                                            timestamps <span class=\"token\" style=\"color:#0000ff\">for</span> test Overall <span class=\"token\" style=\"color:#0000ff\">in</span> grid &quot;<span class=\"token\" style=\"color:#393A34\">,</span>\n                                            grid<span class=\"token\" style=\"color:#393A34\">,</span>\n                                            <span class=\"token\" style=\"color:#A31515\">&quot;in tab &quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                                            tab<span class=\"token\" style=\"color:#393A34\">,</span>\n                                        <span class=\"token\" style=\"color:#393A34\">)</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n                                <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                    test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n                            <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                <span class=\"token\" style=\"color:#0000ff\">try</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                    graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>keys<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">try</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                                        graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;values&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> graphs<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;values&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span>\n                                    <span class=\"token\" style=\"color:#0000ff\">except</span> IndexError<span class=\"token\" style=\"color:#393A34\">:</span>\n                                        test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n                                <span class=\"token\" style=\"color:#0000ff\">except</span> TypeError<span class=\"token\" style=\"color:#393A34\">:</span>\n                                    test_duration <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n\n                            decoded<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>j<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">(</span>k<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> tab<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> tests<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> test_duration<span class=\"token\" style=\"color:#393A34\">)</span>\n                    percent_label_by_grid_csv<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span>decoded<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># output above leaves us with a doubly nested list. Flatten</span>\n    flat_list <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>item <span class=\"token\" style=\"color:#0000ff\">for</span> sublist <span class=\"token\" style=\"color:#0000ff\">in</span> percent_label_by_grid_csv <span class=\"token\" style=\"color:#0000ff\">for</span> item <span class=\"token\" style=\"color:#0000ff\">in</span> sublist<span class=\"token\" style=\"color:#393A34\">]</span>\n    flatter_list <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>item <span class=\"token\" style=\"color:#0000ff\">for</span> sublist <span class=\"token\" style=\"color:#0000ff\">in</span> flat_list <span class=\"token\" style=\"color:#0000ff\">for</span> item <span class=\"token\" style=\"color:#0000ff\">in</span> sublist<span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> flatter_list</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-iwsKbI exQuEV markdown\"><h2>Optimal Stopping point functions</h2></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[5]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">fetch_all_tests</span><span class=\"token\" style=\"color:#393A34\">(</span>raw_data<span class=\"token\" style=\"color:#393A34\">,</span> status_code<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This function takes raw data and status code of the test\n    and returns a dataframe with all the tests with that status code.\n    &quot;&quot;&quot;</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Fetch the list of all tests</span>\n    tests_list <span class=\"token\" style=\"color:#393A34\">=</span> testgrid_labelwise_encoding<span class=\"token\" style=\"color:#393A34\">(</span>raw_data<span class=\"token\" style=\"color:#393A34\">,</span> status_code<span class=\"token\" style=\"color:#393A34\">,</span> overall_only<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">False</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Convert to dataframe</span>\n    tests_df <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>\n        tests_list<span class=\"token\" style=\"color:#393A34\">,</span>\n        columns<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">[</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;timestamp&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;tab&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;grid&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;test&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;test_duration&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;failure/passing&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#393A34\">)</span>\n    tests_df<span class=\"token\" style=\"color:#393A34\">.</span>head<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># We will drop all the rows having NaN values</span>\n    tests_df <span class=\"token\" style=\"color:#393A34\">=</span> tests_df<span class=\"token\" style=\"color:#393A34\">.</span>dropna<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    tests_df <span class=\"token\" style=\"color:#393A34\">=</span> tests_df<span class=\"token\" style=\"color:#393A34\">[</span>tests_df<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;failure/passing&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> tests_df</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[6]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">filter_test_type</span><span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">,</span> test<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This function takes the dataframe with all tests and\n    filters the dataframe for a specified test name.\n    &quot;&quot;&quot;</span>\n    list_test <span class=\"token\" style=\"color:#393A34\">=</span> df<span class=\"token\" style=\"color:#393A34\">[</span>df<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;test&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">==</span> test<span class=\"token\" style=\"color:#393A34\">]</span>\n    list_test <span class=\"token\" style=\"color:#393A34\">=</span> list_test<span class=\"token\" style=\"color:#393A34\">.</span>reset_index<span class=\"token\" style=\"color:#393A34\">(</span>drop<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> list_test</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[7]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">standardize</span><span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">,</span> column<span class=\"token\" style=\"color:#393A34\">,</span> pct<span class=\"token\" style=\"color:#393A34\">,</span> pct_lower<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Function to standardize the features by removing the mean\n    and scaling to unit variance using StandardScaler library.\n\n    Returns standandardized feature, length of the feature\n    and the original feature.\n    &quot;&quot;&quot;</span>\n    sc <span class=\"token\" style=\"color:#393A34\">=</span> StandardScaler<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    y <span class=\"token\" style=\"color:#393A34\">=</span> df<span class=\"token\" style=\"color:#393A34\">[</span>column<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>df<span class=\"token\" style=\"color:#393A34\">[</span>column<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>notnull<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>to_list<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    y<span class=\"token\" style=\"color:#393A34\">.</span>sort<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    len_y <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>y<span class=\"token\" style=\"color:#393A34\">)</span>\n    y <span class=\"token\" style=\"color:#393A34\">=</span> y<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token builtin\">int</span><span class=\"token\" style=\"color:#393A34\">(</span>pct_lower <span class=\"token\" style=\"color:#393A34\">*</span> len_y<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token builtin\">int</span><span class=\"token\" style=\"color:#393A34\">(</span>len_y <span class=\"token\" style=\"color:#393A34\">*</span> pct<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    len_y <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>y<span class=\"token\" style=\"color:#393A34\">)</span>\n    yy <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">[</span>x<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> y<span class=\"token\" style=\"color:#393A34\">]</span>\n    sc<span class=\"token\" style=\"color:#393A34\">.</span>fit<span class=\"token\" style=\"color:#393A34\">(</span>yy<span class=\"token\" style=\"color:#393A34\">)</span>\n    y_std <span class=\"token\" style=\"color:#393A34\">=</span> sc<span class=\"token\" style=\"color:#393A34\">.</span>transform<span class=\"token\" style=\"color:#393A34\">(</span>yy<span class=\"token\" style=\"color:#393A34\">)</span>\n    y_std <span class=\"token\" style=\"color:#393A34\">=</span> y_std<span class=\"token\" style=\"color:#393A34\">.</span>flatten<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> y_std<span class=\"token\" style=\"color:#393A34\">,</span> len_y<span class=\"token\" style=\"color:#393A34\">,</span> y</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[8]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">fit_distribution</span><span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">,</span> column<span class=\"token\" style=\"color:#393A34\">,</span> pct<span class=\"token\" style=\"color:#393A34\">,</span> pct_lower<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This function helps to list out the chi-square statistics for each\n    distribution and further sorts them to find the best distribution.\n\n    Returns a table that contains sorted chi-square values as well as\n    the parameters such as mu (shape), loc (location) and scale for each\n    distribution.\n    &quot;&quot;&quot;</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Set up list of candidate distributions to use</span>\n    y_std<span class=\"token\" style=\"color:#393A34\">,</span> size<span class=\"token\" style=\"color:#393A34\">,</span> y_org <span class=\"token\" style=\"color:#393A34\">=</span> standardize<span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">,</span> column<span class=\"token\" style=\"color:#393A34\">,</span> pct<span class=\"token\" style=\"color:#393A34\">,</span> pct_lower<span class=\"token\" style=\"color:#393A34\">)</span>\n    dist_names <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;weibull_min&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;norm&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;weibull_max&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;beta&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;invgauss&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;uniform&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;gamma&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;expon&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;lognorm&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;pearson3&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;triang&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#393A34\">]</span>\n\n    chi_square_statistics <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># 50 bins</span>\n    percentile_bins <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>linspace<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#36acaa\">100</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#36acaa\">50</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    percentile_cutoffs <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>percentile<span class=\"token\" style=\"color:#393A34\">(</span>y_std<span class=\"token\" style=\"color:#393A34\">,</span> percentile_bins<span class=\"token\" style=\"color:#393A34\">)</span>\n    observed_frequency<span class=\"token\" style=\"color:#393A34\">,</span> bins <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>histogram<span class=\"token\" style=\"color:#393A34\">(</span>y_std<span class=\"token\" style=\"color:#393A34\">,</span> bins<span class=\"token\" style=\"color:#393A34\">=</span>percentile_cutoffs<span class=\"token\" style=\"color:#393A34\">)</span>\n    cum_observed_frequency <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>cumsum<span class=\"token\" style=\"color:#393A34\">(</span>observed_frequency<span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Data frame to store results</span>\n    dist_param <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    dist_param<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;Distribution Names&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> dist_names\n    param_list <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Loop through candidate distributions</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> distribution <span class=\"token\" style=\"color:#0000ff\">in</span> dist_names<span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#008000;font-style:italic\"># Set up distribution and get fitted distribution parameters</span>\n        dist <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">getattr</span><span class=\"token\" style=\"color:#393A34\">(</span>scipy<span class=\"token\" style=\"color:#393A34\">.</span>stats<span class=\"token\" style=\"color:#393A34\">,</span> distribution<span class=\"token\" style=\"color:#393A34\">)</span>\n        param <span class=\"token\" style=\"color:#393A34\">=</span> dist<span class=\"token\" style=\"color:#393A34\">.</span>fit<span class=\"token\" style=\"color:#393A34\">(</span>y_std<span class=\"token\" style=\"color:#393A34\">)</span>\n        param_list<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span>param<span class=\"token\" style=\"color:#393A34\">)</span>\n\n        <span class=\"token\" style=\"color:#008000;font-style:italic\"># Get expected counts in percentile bins</span>\n        <span class=\"token\" style=\"color:#008000;font-style:italic\"># cdf of fitted distribution across bins</span>\n        cdf_fitted <span class=\"token\" style=\"color:#393A34\">=</span> dist<span class=\"token\" style=\"color:#393A34\">.</span>cdf<span class=\"token\" style=\"color:#393A34\">(</span>percentile_cutoffs<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">*</span>param<span class=\"token\" style=\"color:#393A34\">)</span>\n        expected_frequency <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n        <span class=\"token\" style=\"color:#0000ff\">for</span> <span class=\"token builtin\">bin</span> <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>percentile_bins<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">-</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            expected_cdf_area <span class=\"token\" style=\"color:#393A34\">=</span> cdf_fitted<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token builtin\">bin</span> <span class=\"token\" style=\"color:#393A34\">+</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">-</span> cdf_fitted<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token builtin\">bin</span><span class=\"token\" style=\"color:#393A34\">]</span>\n            expected_frequency<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span>expected_cdf_area<span class=\"token\" style=\"color:#393A34\">)</span>\n\n        <span class=\"token\" style=\"color:#008000;font-style:italic\"># Chi-square Statistics</span>\n        expected_frequency <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>expected_frequency<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">*</span> size\n        cum_expected_frequency <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>cumsum<span class=\"token\" style=\"color:#393A34\">(</span>expected_frequency<span class=\"token\" style=\"color:#393A34\">)</span>\n        ss <span class=\"token\" style=\"color:#393A34\">=</span> scipy<span class=\"token\" style=\"color:#393A34\">.</span>stats<span class=\"token\" style=\"color:#393A34\">.</span>chisquare<span class=\"token\" style=\"color:#393A34\">(</span>\n            f_obs<span class=\"token\" style=\"color:#393A34\">=</span>cum_observed_frequency<span class=\"token\" style=\"color:#393A34\">,</span> f_exp<span class=\"token\" style=\"color:#393A34\">=</span>cum_expected_frequency\n        <span class=\"token\" style=\"color:#393A34\">)</span>\n        chi_square_statistics<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span>ss<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Append results to data frame</span>\n    dist_param<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;Parameters&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> param_list\n    dist_param<span class=\"token\" style=\"color:#393A34\">.</span>set_index<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Distribution Names&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Sort by minimum ch-square statistics</span>\n    results <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;Distribution&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> dist_names\n    results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;chi_square and p-value&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> chi_square_statistics\n    results<span class=\"token\" style=\"color:#393A34\">.</span>sort_values<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;chi_square and p-value&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> inplace<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;\\nDistributions listed by Betterment of fit:&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;............................................&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span>results<span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> dist_param<span class=\"token\" style=\"color:#393A34\">,</span> results</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[9]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">best_distribution</span><span class=\"token\" style=\"color:#393A34\">(</span>dist_param<span class=\"token\" style=\"color:#393A34\">,</span> results<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This function takes the distribution paramaters and results\n    from fit_distribution function and finds the best distribution\n    and returns disribution name and parameters.\n    &quot;&quot;&quot;</span>\n    best_dist <span class=\"token\" style=\"color:#393A34\">=</span> results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;Distribution&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    params <span class=\"token\" style=\"color:#393A34\">=</span> dist_param<span class=\"token\" style=\"color:#393A34\">[</span>dist_param<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;Distribution Names&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">==</span> best_dist<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;Parameters&quot;</span>\n    <span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>values\n    params <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span>itertools<span class=\"token\" style=\"color:#393A34\">.</span>chain<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">*</span>params<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> best_dist<span class=\"token\" style=\"color:#393A34\">,</span> params</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[10]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">optimal_stopping_point</span><span class=\"token\" style=\"color:#393A34\">(</span>\n    best_dist<span class=\"token\" style=\"color:#393A34\">,</span>\n    y_std_failing<span class=\"token\" style=\"color:#393A34\">,</span>\n    y_failing<span class=\"token\" style=\"color:#393A34\">,</span>\n    parameters_failing<span class=\"token\" style=\"color:#393A34\">,</span>\n    y_std_passing<span class=\"token\" style=\"color:#393A34\">,</span>\n    y_passing<span class=\"token\" style=\"color:#393A34\">,</span>\n    parameters_passing<span class=\"token\" style=\"color:#393A34\">,</span>\n<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This function takes the best_distribution,\n    failing and passing distributions and parameters\n    and returns an optimal stopping point for the test.\n    &quot;&quot;&quot;</span>\n\n    dist <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">getattr</span><span class=\"token\" style=\"color:#393A34\">(</span>scipy<span class=\"token\" style=\"color:#393A34\">.</span>stats<span class=\"token\" style=\"color:#393A34\">,</span> best_dist<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Obtain the intersection points between the distribution curves</span>\n    x<span class=\"token\" style=\"color:#393A34\">,</span> y <span class=\"token\" style=\"color:#393A34\">=</span> intersection<span class=\"token\" style=\"color:#393A34\">(</span>\n        y_failing<span class=\"token\" style=\"color:#393A34\">,</span>\n        dist<span class=\"token\" style=\"color:#393A34\">.</span>pdf<span class=\"token\" style=\"color:#393A34\">(</span>\n            y_std_failing<span class=\"token\" style=\"color:#393A34\">,</span>\n            parameters_failing<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            parameters_failing<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            parameters_failing<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        y_passing<span class=\"token\" style=\"color:#393A34\">,</span>\n        dist<span class=\"token\" style=\"color:#393A34\">.</span>pdf<span class=\"token\" style=\"color:#393A34\">(</span>\n            y_std_passing<span class=\"token\" style=\"color:#393A34\">,</span>\n            parameters_passing<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            parameters_passing<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            parameters_passing<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#393A34\">)</span>\n    osp <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">max</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> osp</code></pre></div></div></div></div>","fields":{"srcLink":"https://github.com/aicoe-aiops/ocp-ci-analysis/blob/master/notebooks/optimal-stopping-point/osp_helper_functions.ipynb"}}},"pageContext":{"id":"d4524471-df77-5055-959b-641406ebf49c >>> JupyterNotebook"}},"staticQueryHashes":["1764348645","2823140819","3000541721","3606484676"]}