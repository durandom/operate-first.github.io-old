{"componentChunkName":"component---src-templates-markdown-remark-js","path":"/data-science/configuration-files-analysis/docs/overview.md","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"d183a382-b9d5-5411-bf2e-cb9d009511c7","html":"<p>Software systems have become more flexible and feature-rich. The configuration file for MySQL has more than 200 configuration entries with different subentries.  As a result, configuring these systems is a complicated task and frequently causes configuration errors. These errors are one of the major underlying causes of modern software system failures [<a href=\"http://cseweb.ucsd.edu/~tixu/papers/csur.pdf\">1</a>]. In 2017, AT&#x26;T’s  911 service went down for 5 hours because of a system configuration change [<a href=\"https://thehill.com/policy/technology/325510-over-12000-callers-couldnt-reach-911-during-att-outage\">2</a>]. About 12600 unique callers were not able to reach 911 during that period. In another similar incident, Facebook and Instagram went down because of a change that affected facebook’s configuration systems [<a href=\"https://mashable.com/2015/01/27/facebook-tinder-instagram-issues/\">3</a>]. These critical system failures are ubiquitous - In one empirical study, researchers found that the percentage of system failure caused by configuration errors is higher than the percentage of failure resulting from bugs, 30% and 20% respectively [<a href=\"https://atg.netapp.com/wp-content/uploads/2011/10/sosp11-yin.pdf\">4</a>]. </p>\n<p>Some of the configuration files are written by experts and customized by users such as RHEL tuned files, while others are completely configured by end-users. When writing configuration files, users usually take existing files and modify them with little knowledge of the system. The non-expert user can then easily introduce errors. Even worse, the original file may already be corrupted, and the errors are propagated further. In a lot of these cases, misconfigurations are detected by manually specified rules. However, this process is tedious and not scalable. In this project, we propose data-driven methods to detect misconfigurations by discovering frequently occurring patterns in configuration files. </p>\n<ul class=\"pf-c-list\">\n<li><strong><a href=\"get-started.md\">Get Started</a></strong></li>\n<li><strong><a href=\"contribute.md\">How to Contribute</a></strong></li>\n<li><strong><a href=\"content.md\">Project Content</a></strong></li>\n</ul>\n<h2 id=\"contact\" style=\"position:relative;\"><a href=\"#contact\" aria-label=\"contact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contact</h2>\n<p>This project is maintained as part of the AIOps team in Red Hat’s AI CoE as part of the Office of the CTO. More information can be found at <a href=\"https://www.operate-first.cloud/\">https://www.operate-first.cloud/</a>.</p>","fields":{"srcLink":"https://github.com/aicoe-aiops/configuration-files-analysis/blob/master/docs/overview.md"},"frontmatter":{"title":"Configuration file analysis","description":"misconfigurations detection by discovering frequently occurring patterns in configuration files","extraClasses":null,"banner":null}}},"pageContext":{"id":"d183a382-b9d5-5411-bf2e-cb9d009511c7"}},"staticQueryHashes":["1764348645","2823140819","3000541721","3606484676"]}